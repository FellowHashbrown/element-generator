package com.authorId.modId;

import java.util.Random;

import net.minecraft.block.Block;
import net.minecraft.block.SoundType;
import net.minecraft.block.material.Material;
import net.minecraft.block.state.IBlockState;
import net.minecraft.client.Minecraft;
import net.minecraft.client.renderer.block.model.ModelResourceLocation;
import net.minecraft.creativetab.CreativeTabs;
import net.minecraft.item.Item;
import net.minecraft.item.ItemBlock;
import net.minecraft.item.ItemStack;
import net.minecraft.util.BlockRenderLayer;
import net.minecraft.util.EnumFacing;
import net.minecraft.util.math.AxisAlignedBB;
import net.minecraft.util.math.BlockPos;
import net.minecraft.world.IBlockAccess;
import net.minecraft.world.World;
import net.minecraftforge.fml.common.event.FMLInitializationEvent;
import net.minecraftforge.fml.common.event.FMLPreInitializationEvent;
import net.minecraftforge.fml.common.event.FMLServerStartingEvent;
import net.minecraftforge.fml.common.registry.GameRegistry;
import net.minecraftforge.fml.relauncher.Side;
import net.minecraftforge.fml.relauncher.SideOnly;

public class ElementHereBlock {
	
	//Variables
	public static ElementHereBlockBlock elementHere_block;
	public static Object instance;
	
	//Constructor
	public ElementHereBlock() {
		
	}
	
	//Other Methods
	public void generateSurface(World world, Random random, int chunkX, int chunkZ) {
		
	}
	
	public void generateNether(World world, Random random, int chunkX, int chunkZ) {
		
	}
	
	public void registerRenderers() {
		
	}
	
	public int addFuel(ItemStack fuel) {
		return 0;
	}
	
	//Setup
	static {
		//Set elementHere_block
		elementHere_block = new ElementHereBlockBlock();
		
		//Set elementHere_block's block data
		elementHere_block.setHardness(hardnessF);
		elementHere_block.setResistance(resistanceF);
		elementHere_block.setLightLevel(lightLevelF);
		elementHere_block.setLightOpacity(lightOpacity);
		elementHere_block.setHarvestLevel("pickaxe", harvestLevel);
		
		//Set elementHere_block's creative tab
		elementHere_block.setCreativeTab(ModName.ModNameTab);

		//Set elementHere_block's unlocalized name
		elementHere_block.setUnlocalizedName("elementHere_block");
	}
	
	//Actual Block Object
	static class ElementHereBlockBlock extends Block {
		
		int a1 = 0;
		int a2 = 0;
		int a3 = 0;
		int a4 = 0;
		int a5 = 0;
		int a6 = 0;
		
		boolean red = false;
		
		protected ElementHereBlockBlock() {
			//Set Material
			super(Material.IRON);
			
			//Set Sound Type
			setSoundType(SoundType.METAL);
		}
		
		@Override
		public void onBlockAdded(World world, BlockPos blockPos, IBlockState blockState) {
			int i = blockPos.getX();
			int j = blockPos.getY();
			int k = blockPos.getZ();
			
			world.scheduleUpdate(new BlockPos(i, j, k), this, this.tickRate(world));
		}
		
		@Override
		public int getWeakPower(IBlockState blockState, IBlockAccess blockAccess, BlockPos blockPos, EnumFacing side) {
			return red ? 15 : 0;
		}
		
		@Override
		public int getStrongPower(IBlockState blockState, IBlockAccess blockAccess, BlockPos blockPos, EnumFacing side) {
			return red ? 15 : 0;
		}
		
		@SideOnly(Side.CLIENT)
		@Override
		public BlockRenderLayer getBlockLayer() {
			return BlockRenderLayer.SOLID;
		}
		
		@Override
		public AxisAlignedBB getBoundingBox(IBlockState blockState, IBlockAccess blockAccess, BlockPos blockPos) {
			return new AxisAlignedBB(0.0D, 0.0D, 0.0D, 1.0D, 1.0D, 1.0D);
		}
		
		@Override
		public int tickRate(World world) {
			return 10;
		}
		
		@Override
		public int quantityDropped(Random random) {
			return 1;
		}
	}
	
	//Initializations
	public void serverLoad(FMLServerStartingEvent e) {
		//ServerLoad
		
	}
	
	public void preInit(FMLPreInitializationEvent e) {
		//PreInit
		elementHere_block.setRegistryName("elementHere_block");
		GameRegistry.register(elementHere_block);
		GameRegistry.register(new ItemBlock(elementHere_block).setRegistryName(elementHere_block.getRegistryName()));
		
	}
	
	public void load(FMLInitializationEvent e) {
		//Rendering Item
		if(e.getSide() == Side.CLIENT) {
			Minecraft.getMinecraft().getRenderItem().getItemModelMesher().register(Item.getItemFromBlock(elementHere_block), 0, new ModelResourceLocation("modId:elementHere_block", "inventory"));
		}
		
		//Recipes
		GameRegistry.addShapedRecipe(
				new ItemStack(elementHere_block, 1), 
				new Object[] {
						"GGG",
						"GGG",
						"GGG",
						Character.valueOf('G'), ElementHereGem.elementHere_gem
				}
		);
	}

}
