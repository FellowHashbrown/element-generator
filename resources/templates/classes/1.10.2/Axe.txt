package com.authorId.modId;

import net.minecraftforge.fml.relauncher.Side;
import net.minecraftforge.fml.common.registry.GameRegistry;
import net.minecraftforge.fml.common.event.FMLServerStartingEvent;
import net.minecraftforge.fml.common.event.FMLPreInitializationEvent;
import net.minecraftforge.fml.common.event.FMLInitializationEvent;
import net.minecraftforge.common.util.EnumHelper;

import net.minecraft.world.World;
import net.minecraft.item.ItemTool;
import net.minecraft.item.ItemStack;
import net.minecraft.item.Item;
import net.minecraft.init.Items;
import net.minecraft.init.Blocks;
import net.minecraft.creativetab.CreativeTabs;
import net.minecraft.client.renderer.block.model.ModelResourceLocation;
import net.minecraft.client.Minecraft;
import net.minecraft.block.state.IBlockState;
import net.minecraft.block.material.Material;
import net.minecraft.block.Block;

import java.util.Set;
import java.util.Random;

public class ElementHereAxe {
	
	//Variables
	public static Item elementHere_axe;
	public static Object instance;
	
	//Constructor
	public ElementHereAxe() {
		
	}
	
	//Other Methods
	public void generateNether(World world, Random random, int chunkX, int chunkY) {
		
	}
	
	public void generateSurface(World world, Random random, int chunkX, int chunkY) {
		
	}
	
	public void registerRenderers() {
		
	}
	
	public int addFuel(ItemStack fuel) {
		return 0;
	}
	
	//Setup
	static {
		elementHere_axe = (new ElementHereAxeItem(){});
		
		elementHere_axe.setUnlocalizedName("elementHere_axe");
		elementHere_axe.setRegistryName("elementHere_axe");
		GameRegistry.register(elementHere_axe);
		elementHere_axe.setCreativeTab(ModName.ModNameTab);
	}
	
	//Actual Tool Class
	static class ElementHereAxeItem extends ItemTool {
		
		private static final Set<Block> EFFECTIVE_ON = com.google.common.collect.Sets.newHashSet(
			new Block[]{
				Blocks.PLANKS, Blocks.BOOKSHELF,
				Blocks.LOG, Blocks.LOG2, Blocks.CHEST, Blocks.PUMPKIN, Blocks.LIT_PUMPKIN, Blocks.MELON_BLOCK, Blocks.LADDER, Blocks.WOODEN_BUTTON,
				Blocks.WOODEN_PRESSURE_PLATE
			}
		);
		
		protected ElementHereAxeItem() {
			super(EnumHelper.addToolMaterial("elementHere_axe", harvestLevel, uses, efficiencyF, attackDamage, enchantability), EFFECTIVE_ON);
			
			damageVsEntity = 10;
			attackSpeed = -3.1F;
		}
		
		@Override
		public float getStrVsBlock(ItemStack stack, IBlockState state) {			
			Material material = state.getMaterial();
			return material != Material.WOOD && material != Material.PLANTS && material != Material.VINE
					? super.getStrVsBlock(stack, state)
					: this.efficiencyOnProperMaterial;
		}
	}
	
	//Initialization
	public void serverLoad(FMLServerStartingEvent event) {
		
	}
	
	public void preInit(FMLPreInitializationEvent event) {
		
	}
	
	public void load(FMLInitializationEvent event) {
		//Rendering Items
		if(event.getSide() == Side.CLIENT) {
			Minecraft.getMinecraft().getRenderItem().getItemModelMesher().register(elementHere_axe, 0, new ModelResourceLocation("modId:elementHere_axe", "inventory"));
		}
		
		//Recipes
		GameRegistry.addShapedRecipe(
				new ItemStack(elementHere_axe, 1),
				new Object[] {
						"GGX", 
						"GSX", 
						"XSX",
						Character.valueOf('G'), ElementHereGem.elementHere_gem,
						Character.valueOf('S'), Items.STICK
				}
		);
		GameRegistry.addShapedRecipe(
				new ItemStack(elementHere_axe, 1),
				new Object[] {
						"XGG", 
						"XGS", 
						"XXS",
						Character.valueOf('G'), ElementHereGem.elementHere_gem,
						Character.valueOf('S'), Items.STICK
				}
		);
		
	}

}
